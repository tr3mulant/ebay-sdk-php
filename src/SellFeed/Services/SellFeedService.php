<?php
/**
 * DO NOT EDIT THIS FILE!
 *
 * This file was automatically generated from external sources.
 *
 * Any manual change here will be lost the next time the SDK
 * is updated. You've been warned!
 */

namespace DTS\eBaySDK\SellFeed\Services;

class SellFeedService extends \DTS\eBaySDK\SellFeed\Services\SellFeedBaseService
{
    const API_VERSION = 'v1';

    /**
     * @property array $operations Associative array of operations provided by the service.
     */
    protected static $operations = [
        'createTask' => [
            'method' => 'POST',
            'resource' => 'task',
            'responseClass' => '\DTS\eBaySDK\SellFeed\Types\CreateTaskResponse',
            'params' => [
            ]
        ],
        'getResultFile' => [
            'method' => 'GET',
            'resource' => 'task/{task_id}/download_result_file',
            'responseClass' => '\DTS\eBaySDK\SellFeed\Types\GetResultFileResponse',
            'params' => [
                'task_id' => [
                    'valid' => ['string'],
                    'required' => true
                ],
            ]
        ],
        'getTasks' => [
            'method' => 'GET',
            'resource' => 'task',
            'responseClass' => '\DTS\eBaySDK\SellFeed\Types\GetTasksResponse',
            'params' => [
                'schedule_id' => [
                    'valid' => ['string'],
                    'required' => false
                ],
                'feed_type' => [
                    'valid' => ['string'],
                    'required' => false
                ],
                'look_back_days' => [
                    'valid' => ['integer'],
                    'required' => false
                ],
                'date_range' => [
                    'valid' => ['string'],
                    'required' => false
                ],
                'limit' => [
                    'valid' => ['integer'],
                    'required' => false
                ],
                'offset' => [
                    'valid' => ['integer'],
                    'required' => false
                ]
            ]
        ],
        'uploadFile' => [
            'method' => 'POST',
            'resource' => 'task/{task_id}/upload_file',
            'responseClass' => '\DTS\eBaySDK\SellFeed\Types\UploadFileResponse',
            'params' => [
                'task_id' => [
                    'valid' => ['string'],
                    'required' => true
                ],
            ]
        ],
    ];

    /**
     * @param array $config Configuration option values.
     */
    public function __construct(array $config = [])
    {
        parent::__construct($config);
    }

    /**
     * @param \DTS\eBaySDK\SellFeed\Types\CreateTaskRequest $request
     * @return \DTS\eBaySDK\SellFeed\Types\CreateTaskResponse
     */
    public function createTask(\DTS\eBaySDK\SellFeed\Types\CreateTaskRequest $request)
    {
        return $this->createTaskAsync($request)->wait();
    }

    /**
     * @param \DTS\eBaySDK\SellFeed\Types\CreateTaskRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function createTaskAsync(\DTS\eBaySDK\SellFeed\Types\CreateTaskRequest $request)
    {
        return $this->callOperationAsync('createTask', $request);
    }

    /**
     * @param \DTS\eBaySDK\SellFeed\Types\GetResultFileRequest $request
     * @return \DTS\eBaySDK\SellFeed\Types\GetResultFileResponse
     */
    public function getResultFile(\DTS\eBaySDK\SellFeed\Types\GetResultFileRequest $request)
    {
        return $this->getResultFileAsync($request)->wait();
    }

    /**
     * @param \DTS\eBaySDK\SellFeed\Types\GetResultFileRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getResultFileAsync(\DTS\eBaySDK\SellFeed\Types\GetResultFileRequest $request)
    {
        return $this->callFileOperationAsync('getResultFile', $request);
    }

    /**
     * @param \DTS\eBaySDK\SellFeed\Types\GetTasksRequest $request
     * @return \DTS\eBaySDK\SellFeed\Types\GetTasksResponse
     */
    public function getTasks(\DTS\eBaySDK\SellFeed\Types\GetTasksRequest $request)
    {
        return $this->getTasksAsync($request)->wait();
    }

    /**
     * @param \DTS\eBaySDK\SellFeed\Types\GetTasksRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function getTasksAsync(\DTS\eBaySDK\SellFeed\Types\GetTasksRequest $request)
    {
        return $this->callOperationAsync('getTasks', $request);
    }

    /**
     * @param \DTS\eBaySDK\SellFeed\Types\UploadFileRequest $request
     * @return \DTS\eBaySDK\SellFeed\Types\UploadFileResponse
     */
    public function uploadFile(\DTS\eBaySDK\SellFeed\Types\UploadFileRequest $request)
    {
        return $this->uploadFileAsync($request)->wait();
    }

    /**
     * @param \DTS\eBaySDK\SellFeed\Types\UploadFileRequest $request
     * @return \GuzzleHttp\Promise\PromiseInterface
     */
    public function uploadFileAsync(\DTS\eBaySDK\SellFeed\Types\UploadFileRequest $request)
    {
        return $this->callFormOperationAsync('uploadFile', $request);
    }
}
